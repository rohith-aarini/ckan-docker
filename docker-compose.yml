volumes:
  ckan_storage:
  pg_data:
  solr_data:
  pip_cache:
  site_packages:

services:

  nginx:
    build:
      context: nginx/
      dockerfile: Dockerfile
    networks:
      - webnet  # Public-facing network
      - ckannet # Internal network connecting CKAN and Nginx
    depends_on:
      ckan:
        condition: service_healthy
    ports:
      - "0.0.0.0:${NGINX_SSLPORT_HOST}:${NGINX_SSLPORT}"
    
  ckan:
    build:
      context: ckan/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    networks:
      - ckannet   # Internal network connecting CKAN and Nginx
      - dbnet     # Internal network for database connections
      - solrnet   # Internal network for Solr
      - redisnet  # Internal network for Redis
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
      - pip_cache:/root/.cache/pip
      - site_packages:/usr/lib/python3.10/site-packages
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]

  datapusher:
    networks:
      - ckannet   # Internal network connecting CKAN and Datapusher
      - dbnet     # Internal network for database connections
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://0.0.0.0:8800"]

  db:
    build:
      context: postgresql/
    networks:
      - dbnet     # Internal network for database connections
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - DATASTORE_READONLY_USER
      - DATASTORE_READONLY_PASSWORD
      - DATASTORE_DB
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
     
  solr:
    networks:
      - solrnet   # Internal network for Solr connections
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    image: redis:${REDIS_VERSION}
    networks:
      - redisnet  # Internal network for Redis connections
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

networks:
  webnet:        # Public-facing network for Nginx
  ckannet:       # Internal network connecting CKAN and Nginx
  solrnet:       # Internal network for Solr connections
    internal: true
  dbnet:         # Internal network for database connections
    internal: true
  redisnet:      # Internal network for Redis connections
    internal: true
